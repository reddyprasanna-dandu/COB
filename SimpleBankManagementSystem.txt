import sqlite3

# Function to create a new account
def create_account(conn, cursor, account_number, account_holder, balance):
    cursor.execute('''INSERT INTO accounts (account_number, account_holder, balance)
                      VALUES (?, ?, ?)''', (account_number, account_holder, balance))
    conn.commit()
    print("Account created successfully!")

# Function to withdraw money from an account
def withdraw_money(conn, cursor, account_number, amount):
    cursor.execute('''SELECT balance FROM accounts WHERE account_number = ?''', (account_number,))
    current_balance = cursor.fetchone()[0]

    if current_balance >= amount:
        new_balance = current_balance - amount
        cursor.execute('''UPDATE accounts SET balance = ? WHERE account_number = ?''', (new_balance, account_number))
        conn.commit()
        print("Withdrawal successful. Updated balance:", new_balance)
    else:
        print("Insufficient funds!")

# Function to deposit money into an account
def deposit_money(conn, cursor, account_number, amount):
    cursor.execute('''SELECT balance FROM accounts WHERE account_number = ?''', (account_number,))
    current_balance = cursor.fetchone()[0]

    new_balance = current_balance + amount
    cursor.execute('''UPDATE accounts SET balance = ? WHERE account_number = ?''', (new_balance, account_number))
    conn.commit()
    print("Deposit successful. Updated balance:", new_balance)

# Function to update account details
def update_account_details(conn, cursor, account_number, new_holder_name):
    cursor.execute('''UPDATE accounts SET account_holder = ? WHERE account_number = ?''', (new_holder_name, account_number))
    conn.commit()
    print("Account details updated successfully!")

# Function to transfer money between accounts
def transfer_money(conn, cursor, from_account, to_account, amount):
    withdraw_money(conn, cursor, from_account, amount)
    deposit_money(conn, cursor, to_account, amount)
    print("Transfer successful!")

# Main function to initialize the database
def main():
    # Connect to SQLite database (or create a new one if it doesn't exist)
    conn = sqlite3.connect('bank.db')
    cursor = conn.cursor()

    # Create 'accounts' table if it doesn't exist
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS accounts (
            account_number INTEGER PRIMARY KEY,
            account_holder TEXT,
            balance REAL
        )
    ''')

    # Example usage
    create_account(conn, cursor, 1001, 'John Doe', 1000.0)
    create_account(conn, cursor, 1002, 'Jane Doe', 1500.0)

    withdraw_money(conn, cursor, 1001, 200.0)
    deposit_money(conn, cursor, 1002, 300.0)

    update_account_details(conn, cursor, 1001, 'John Smith')

    transfer_money(conn, cursor, 1002, 1001, 500.0)

    # Close the database connection
    conn.close()

if __name__ == "__main__":
    main()